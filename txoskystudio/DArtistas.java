
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author usutarde1
 */
public class DArtistas extends javax.swing.JDialog {

    /**
     * Creates new form DGrabacion
     */
    public static final String URL = "jdbc:mysql://localhost/txskystudio?serverTimezone=UTC";
    public static final String USERNAME = "root";
    public static final String PASSWORD = "toor";
//    DefaultTableModel modelo;
    
    public DArtistas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//        modelo = new DefaultTableModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_canciones = new javax.swing.JLabel();
        lbl_genero = new javax.swing.JLabel();
        lbl_estilo = new javax.swing.JLabel();
        txf_nombre = new javax.swing.JTextField();
        txf_estilos = new javax.swing.JTextField();
        txf_edad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_artistas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txf_discos = new javax.swing.JTextField();
        lbl_id = new javax.swing.JLabel();
        txf_id = new javax.swing.JTextField();
        btn_busdisco = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jme_archivo = new javax.swing.JMenu();
        mui_martistas = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mui_añadir = new javax.swing.JMenuItem();
        mui_borrar = new javax.swing.JMenuItem();
        mui_modificar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbl_canciones.setText("Nombre:");

        lbl_genero.setText("Genero:");

        lbl_estilo.setText("Edad:");

        txf_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txf_nombreActionPerformed(evt);
            }
        });

        jtable_artistas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodigoArtista", "Nombre", "Estilo", "Edad", "Discos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtable_artistas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_artistasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtable_artistas);

        jLabel1.setText("Discos:");

        lbl_id.setText("CodigoArtista:");

        btn_busdisco.setText("Buscar Discos");
        btn_busdisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_busdiscoActionPerformed(evt);
            }
        });

        jme_archivo.setText("Archivo");

        mui_martistas.setText("Mostrar Artistas");
        mui_martistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mui_martistasActionPerformed(evt);
            }
        });
        jme_archivo.add(mui_martistas);

        jMenuBar1.add(jme_archivo);

        jMenu2.setText("Editar");

        mui_añadir.setText("Añadir");
        mui_añadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mui_añadirActionPerformed(evt);
            }
        });
        jMenu2.add(mui_añadir);

        mui_borrar.setText("Borrar");
        mui_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mui_borrarActionPerformed(evt);
            }
        });
        jMenu2.add(mui_borrar);

        mui_modificar.setText("Modificar");
        mui_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mui_modificarActionPerformed(evt);
            }
        });
        jMenu2.add(mui_modificar);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_busdisco)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbl_canciones, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_genero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbl_estilo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addComponent(lbl_id))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txf_nombre)
                            .addComponent(txf_estilos)
                            .addComponent(txf_edad)
                            .addComponent(txf_discos, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(txf_id))
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_id)
                            .addComponent(txf_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_canciones)
                            .addComponent(txf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_genero)
                            .addComponent(txf_estilos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_estilo)
                            .addComponent(txf_edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txf_discos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_busdisco)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txf_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txf_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txf_nombreActionPerformed

    private void jtable_artistasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_artistasMouseClicked
        // TODO add your handling code here:
        String codigoArtista = String.valueOf(jtable_artistas.getValueAt(jtable_artistas.getSelectedRow(), 0));
        String nombre = String.valueOf(jtable_artistas.getValueAt(jtable_artistas.getSelectedRow(), 1));
        String estilo = String.valueOf(jtable_artistas.getValueAt(jtable_artistas.getSelectedRow(), 2));
        String edad = String.valueOf(jtable_artistas.getValueAt(jtable_artistas.getSelectedRow(), 3));
        String discos = String.valueOf(jtable_artistas.getValueAt(jtable_artistas.getSelectedRow(), 4));

        txf_id.setText(codigoArtista);
        txf_nombre.setText(nombre);
        txf_estilos.setText(estilo);
        txf_edad.setText(edad);
        txf_discos.setText(discos);
    }//GEN-LAST:event_jtable_artistasMouseClicked

    private void mui_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mui_borrarActionPerformed
        // TODO add your handling code here:
        borrarArtista();
    }//GEN-LAST:event_mui_borrarActionPerformed

    private void mui_añadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mui_añadirActionPerformed
        // TODO add your handling code here:
        insertarArtistas();
    }//GEN-LAST:event_mui_añadirActionPerformed

    private void mui_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mui_modificarActionPerformed
        // TODO add your handling code here:
        modificarArtista();
    }//GEN-LAST:event_mui_modificarActionPerformed

    private void mui_martistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mui_martistasActionPerformed
        // TODO add your handling code here:
        consultarArtistas();
    }//GEN-LAST:event_mui_martistasActionPerformed

    private void btn_busdiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_busdiscoActionPerformed
        // TODO add your handling code here:
        DBuscaDiscos bd = new DBuscaDiscos(null,true);
//        bd.setVisible(true);
    }//GEN-LAST:event_btn_busdiscoActionPerformed

    
    
    public void buscaDiscos(){
        
    }
    
    public void modificarArtista() {
        int res = 0;
        PreparedStatement ps = null;
        Connection con = getConection();
        try {
            String sql = "UPDATE artistas SET CodigoArtista=?, Nombre=?, Genero=?, Edad=?, Discos=? WHERE CodigoArtista=?";
            ps = con.prepareStatement(sql);
            ps.setString(1, txf_id.getText());
            ps.setString(2, txf_nombre.getText());
            ps.setString(3, txf_estilos.getText());
            ps.setString(4, txf_edad.getText());
            ps.setString(5, txf_discos.getText());
            ps.setString(6, txf_id.getText());
            res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Artista ha sido modificado");
            } else {
                JOptionPane.showMessageDialog(null, "El artista no ha podido ser modificado");
            }
            consultarArtistas();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }

        }
    }

    public void borrarArtista() {
        int res = 0;
        PreparedStatement ps = null;
        Connection con = getConection();

        try {
            String sql = "DELETE FROM artistas WHERE CodigoArtista=?";
            ps = con.prepareStatement(sql);
            ps.setString(1, String.valueOf(jtable_artistas.getValueAt(jtable_artistas.getSelectedRow(), 0)));
            res = ps.executeUpdate();
            if (res > 0) {
                JOptionPane.showMessageDialog(null, "El registro ha sido borrado con exito.");
            } else {
                JOptionPane.showMessageDialog(null, "El registro no ha podido ser borrado.");
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                consultarArtistas();
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }

    public void insertarArtistas() {
        int res = 0;
        PreparedStatement ps = null;
        Connection con = getConection();
        try {
            String sql = "INSERT INTO artistas (Nombre, Genero, Edad, Discos) VALUES (?,?,?,?)";
            ps = con.prepareStatement(sql);
//            ps.setString(1, txf_id.getText());
            ps.setString(1, txf_nombre.getText());
            ps.setString(2, txf_estilos.getText());
            ps.setString(3, txf_edad.getText());
            ps.setString(4, txf_discos.getText());
            res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Artista añadido con exito");
            } else {
                JOptionPane.showMessageDialog(null, "El artista no ha podido ser añadido");
            }
            consultarArtistas();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }

        }
    }

    public void consultarArtistas() {
        Connection con = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        con = getConection();
        try {
            String sql = "SELECT * FROM artistas";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            ResultSetMetaData rsMd = rs.getMetaData();

            int numeroColumnas = rsMd.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            this.jtable_artistas.setModel(modelo);
            //Este bucle for sirve para añadir los titulos en la tabla
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }
            //El primer bucle while va leyendo el numero de columnas que hay en la tabla de la base
            // y le da el valor al tamaño del array de tipo Object
            //El bucle for, que esta dentro de el while va leyendo los datos y los añade al array
            //de tipo objecto para luego meter todos los datos a la tabla
            while (rs.next()) {
                Object[] fila = new Object[numeroColumnas];

                for (int x = 0; x < numeroColumnas; x++) {
                    fila[x] = rs.getObject(x + 1);
                }
                modelo.addRow(fila);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }

    public static Connection getConection() {
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(URL, USERNAME, PASSWORD);
            // JOptionPane.showMessageDialog(null, "Conexion exitosa");
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "La conexion a la Base de Datos no se ha podido realizar.");
        }
        return con;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DArtistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DArtistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DArtistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DArtistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DArtistas dialog = new DArtistas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_busdisco;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu jme_archivo;
    private javax.swing.JTable jtable_artistas;
    private javax.swing.JLabel lbl_canciones;
    private javax.swing.JLabel lbl_estilo;
    private javax.swing.JLabel lbl_genero;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JMenuItem mui_añadir;
    private javax.swing.JMenuItem mui_borrar;
    private javax.swing.JMenuItem mui_martistas;
    private javax.swing.JMenuItem mui_modificar;
    private javax.swing.JTextField txf_discos;
    private javax.swing.JTextField txf_edad;
    private javax.swing.JTextField txf_estilos;
    private javax.swing.JTextField txf_id;
    private javax.swing.JTextField txf_nombre;
    // End of variables declaration//GEN-END:variables
}
